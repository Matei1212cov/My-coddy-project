import random
import telebot
import time, threading, schedule
from telebot.types import ReactionTypeEmoji
from telebot import custom_filters
from bot_logic import gen_pass
from telebot import TeleBot
# –ó–∞–º–µ–Ω–∏ 'TOKEN' –Ω–∞ —Ç–æ–∫–µ–Ω —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞
# –≠—Ç–æ—Ç —Ç–æ–∫–µ–Ω —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –æ—Ç BotFather, —á—Ç–æ–±—ã –±–æ—Ç –º–æ–≥ —Ä–∞–±–æ—Ç–∞—Ç—å
bot = telebot.TeleBot("7227303114:AAFxUJo5ZfI70TJ3iGQgvxu3yDB4gVBgsHo")
    
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π Telegram –±–æ—Ç. –ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å!")
    
@bot.message_handler(commands=['hello'])
def send_hello(message):
   bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?")
    
@bot.message_handler(commands=['bye'])
def send_bye(message):
    bot.reply_to(message, "–ü–æ–∫–∞! –£–¥–∞—á–∏!")

@bot.message_handler(commands=['pass'])
def send_password(message):
    password = gen_pass(10)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –ø–∞—Ä–æ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, 10 —Å–∏–º–≤–æ–ª–æ–≤

    bot.reply_to(message, f"–í–æ—Ç —Ç–≤–æ–π —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: {password}")   
    
#@bot.message_handler(func=lambda message: True)
#def echo_all(message):
   # bot.reply_to(message, message.text)
    
#bot.polling()
bot.message_handler(commands=['eco'])
def send_welcome(message):

    list_of_informations=["–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—ã–±—Ä–æ—Å–æ–≤ —É–≥–ª–µ–∫–∏—Å–ª–æ–≥–æ –≥–∞–∑–∞ ","–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –æ—Ç—Ö–æ–¥–æ–≤","–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —ç–Ω–µ—Ä–≥–∏–∏","–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤","–ü–æ—Å–∞–¥–∫–∞ –¥–µ—Ä–µ–≤—å–µ–≤"]
    list_of_informations += random.choice
    bot.reply_to(message,"–° –ø–æ–º–æ—â—å—é —ç—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ —É–ª—É—á—à–∏—Ç—å –º–∏—Ä" )





# Send a reactions to all messages with content_type 'text' (content_types defaults to ['text'])
@bot.message_handler(func=lambda message: True)
def send_reaction(message):
    emo = ["\U0001F525", "\U0001F917", "\U0001F60E"]  # or use ["üî•", "ü§ó", "üòé"]
    bot.set_message_reaction(message.chat.id, message.id, [ReactionTypeEmoji(random.choice(emo))], is_big=False)


@bot.message_reaction_handler(func=lambda message: True)
def get_reactions(message):
    bot.reply_to(message, f"You changed the reaction from {[r.emoji for r in message.old_reaction]} to {[r.emoji for r in message.new_reaction]}")




@bot.message_handler(chat_types=['supergroup'], is_chat_admin=True)
def answer_for_admin(message):
    bot.send_message(message.chat.id,"hello my admin")


@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    bot.reply_to(message, "Hi! Use /set <seconds> to set a timer")


def beep(chat_id) -> None:
    """Send the beep message."""
    bot.send_message(chat_id, text='Beep!')


@bot.message_handler(commands=['set'])
def set_timer(message):
    args = message.text.split()
    if len(args) > 1 and args[1].isdigit():
        sec = int(args[1])
        schedule.every(sec).seconds.do(beep, message.chat.id).tag(message.chat.id)
    else:
        bot.reply_to(message, 'Usage: /set <seconds>')


@bot.message_handler(commands=['unset'])
def unset_timer(message):
    schedule.clear(message.chat.id)


if __name__ == '__main__':
    threading.Thread(target=bot.infinity_polling, name='bot_infinity_polling', daemon=True).start()
    while True:
        schedule.run_pending()
        time.sleep(1)    



print(–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –º–∏—Ä –ª—É—á—à–µ.)

list_of_informations=["–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—ã–±—Ä–æ—Å–æ–≤ —É–≥–ª–µ–∫–∏—Å–ª–æ–≥–æ –≥–∞–∑–∞ ","–°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –æ—Ç—Ö–æ–¥–æ–≤","–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —ç–Ω–µ—Ä–≥–∏–∏","–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤","–ü–æ—Å–∞–¥–∫–∞ –¥–µ—Ä–µ–≤—å–µ–≤"]


# Register filter
bot.add_custom_filter(custom_filters.IsAdminFilter(bot))
bot.infinity_polling(allowed_updates=['message', 'message_reaction'])
